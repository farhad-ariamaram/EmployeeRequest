@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using System.Collections.Generic
@using System.Linq
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using Microsoft.AspNetCore.Mvc.Rendering;
using Microsoft.AspNetCore.Http;
@{
    var entitySetName = Model.ModelMetadata.EntitySetName;
    var entitySetVar = Model.EntitySetVariable ??
        (String.IsNullOrEmpty(entitySetName)
            ? entitySetName
            : (entitySetName.Substring(0, length: 1).ToLowerInvariant() + entitySetName.Substring(1)));

    var relatedProperties = new Dictionary<string, dynamic>();
    foreach (var nav in Model.ModelMetadata.Navigations)
    {
        relatedProperties.Add(nav.AssociationPropertyName, nav);
    }

    foreach (var namespaceName in Model.RequiredNamespaces)
    {
        @:using @namespaceName;
    }
}

namespace @Model.NamespaceName
{
    public class @Model.PageModelClassName : PageModel
    {
    private readonly @Model.ContextTypeName _context;

    public @(Model.PageModelClassName)(@Model.ContextTypeName context)
    {
    _context = context;
    }

    public IActionResult OnGet(string id)
    {
    string uid = HttpContext.Session.GetString("uid");
    if (uid == null)
    {
    return RedirectToPage("../../Index");
    }

    ViewData["EmployeeId"] = id;

    @{
        foreach (var property in relatedProperties.Values)
        {
            @:ViewData["@(property.ForeignKeyPropertyNames[0])"] = new SelectList(_context.@property.EntitySetName, "@property.PrimaryKeyNames[0]", "@property.DisplayPropertyName");
        }
    }
    return Page();
    }

    [BindProperty]
    public @Model.ViewDataTypeShortName @Model.ViewDataTypeShortName { get; set; }

    public async Task<IActionResult> OnPostAsync()
        {
        string uid = HttpContext.Session.GetString("uid");
        if (uid == null)
        {
        return RedirectToPage("../../Index");
        }

        if (!ModelState.IsValid)
        {
        return Page();
        }

        long lastid = _context.@(Model.ViewDataTypeShortName)s.OrderByDescending(a => a.).FirstOrDefault().;
        @(Model.ViewDataTypeShortName). = lastid + 1;
        _context.@(Model.ViewDataTypeShortName)s.Add(@(Model.ViewDataTypeShortName));

        _context.@(entitySetName).Add(@Model.ViewDataTypeShortName);

        TblEmployeeRequestEmployeeEditLog t = new TblEmployeeRequestEmployeeEditLog()
        {
        FldEmployeeRequestEmployeeEditLogDate = DateTime.Now,
        FldEmployeeRequestUserId = Int64.Parse(uid),
        FldEmployeeRequestEmployeeId = @(Model.ViewDataTypeShortName).FldEmployeeRequestEmployeeId,
        FldEmployeeRequestEmployeeEditLogSection = "NAME-Create"
        };
        _context.TblEmployeeRequestEmployeeEditLogs.Add(t);

        await _context.SaveChangesAsync();

        return RedirectToPage("Index", new { id = @(Model.ViewDataTypeShortName).FldEmployeeRequestEmployeeId });
        }
        }
        }
