@page
@model EmployeeRequest.AcceptModel
@using Utilities;

@{
    ViewData["Title"] = "تایید درخواست ها";
}

<h4>تایید درخواست ها</h4>

<table class="table table-striped table-responsive">
    <thead>
        <tr>
            <th>
                درخواست دهنده
            </th>
            <th>
                ثبت کننده
            </th>
            <th>
                شغل
            </th>
            <th>
                شغل تامین اجتماعی
            </th>
            <th>
                شغل اونت
            </th>
            <th>
                انتخاب عنوان شغل از
            </th>
            <th>
                تاریخ شروع انتشار آگهی استخدام
            </th>
            <th>
                تاریخ پایان انتشار آگهی استخدام
            </th>
            <th>
                نیاز به مرد
            </th>
            <th>
                نیاز به زن
            </th>
            <th>
                توضیحات داخلی
            </th>
            <th>
                توضیحات انتشار
            </th>
            <th>
                توضیحات شغل
            </th>
            <th>
                وضعیت تایید / رد
            </th>
            <th>
                تاییدکننده / ردکننده
            </th>
            <th>
                تاریخ تایید / رد
            </th>
            <th>
                وضعیت انتقال
            </th>
            <th>
                تاریخ انتقال
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.TblEmployeeRequestEmployeeRequest)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FldEmployeeRequestUserApplicant.FldEmployeeRequestUserUsername)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FldEmployeeRequestUserSubmitter.FldEmployeeRequestUserUsername)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FldEmployeeRequestJobs.JobsName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FldEmployeeRequestJobTamin.FldTaminJobName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FldEmployeeRequestJobOnet.FldJobName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FldEmployeeRequestJobTitleFrom.TblEmployeeRequestJobTitleFromTitle)
                </td>
                <td>
                    @if (item.FldEmployeeRequestEmployeeRequestStartDate != null)
                    {
                        @item.FldEmployeeRequestEmployeeRequestStartDate.toPersianDate();
                    }
                </td>
                <td>
                    @if (item.FldEmployeeRequestEmployeeRequestEndDate != null)
                    {
                        @item.FldEmployeeRequestEmployeeRequestEndDate.toPersianDate()
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FldEmployeeRequestEmployeeRequestNeedMan)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FldEmployeeRequestEmployeeRequestNeedWoman)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FldEmployeeRequestEmployeeRequestInternalDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FldEmployeeRequestEmployeeRequestPublishDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FldEmployeeRequestEmployeeRequestJobDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FldEmployeeRequestEmployeeRequestIsAccept)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FldEmployeeRequestUserAccepter.FldEmployeeRequestUserUsername)
                </td>
                <td>
                    @if (item.FldEmployeeRequestEmployeeRequestAcceptDate != null)
                    {
                        @item.FldEmployeeRequestEmployeeRequestAcceptDate.toPersianDate();
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FldEmployeeRequestEmployeeRequestIsTransfered)
                </td>
                <td>
                    @if (item.FldEmployeeRequestEmployeeRequestTransferDate != null)
                    {
                        @item.FldEmployeeRequestEmployeeRequestTransferDate.toPersianDate();
                    }
                </td>
                <td>
                    <a href="#" class="btn btn-success w-100" onclick="AskAccept(@item.FldEmployeeRequestEmployeeRequestId);">تایید</a>
                    <a href="#" class="btn btn-danger w-100" onclick="AskDeny(@item.FldEmployeeRequestEmployeeRequestId);">رد</a>
                    <a href="#" onclick="AskDelete(@item.FldEmployeeRequestEmployeeRequestId);">حذف</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <a asp-page="../Panel/Index">بازگشت به پنل کاربری</a>
</div>

@section Scripts {
    <script src="~/lib/sweetalert/sweetalert2.10.js"></script>
    <script>
        function AskDelete(id) {
            Swal.fire({
                title: 'درخواست حذف شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    var xmlHttp = new XMLHttpRequest();
                    xmlHttp.open("GET", "?id=" + id + "&handler=Delete", false);
                    xmlHttp.send(null);
                    Swal.fire('حذف شد', '', 'success').then(() => {
                        location.reload();
                    })
                }
            });
        }

        function AskAccept(id) {
            Swal.fire({
                title: 'درخواست تایید شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    var xmlHttp = new XMLHttpRequest();
                    xmlHttp.open("GET", "?id=" + id + "&handler=Accept", false);
                    xmlHttp.send(null);
                    Swal.fire('درخواست تایید شد', '', 'success').then(() => {
                        location.reload();
                    })
                }
            });
        }

        function AskDeny(id) {
            Swal.fire({
                title: 'درخواست رد شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    var xmlHttp = new XMLHttpRequest();
                    xmlHttp.open("GET", "?id=" + id + "&handler=Deny", false);
                    xmlHttp.send(null);
                    Swal.fire('درخواست رد شد', '', 'success').then(() => {
                        location.reload();
                    })
                }
            });
        }
    </script>
}