@page
@model EmployAccept.IndexModel
@using Utilities;

@{
    ViewData["Title"] = "تایید نیرو";
}

<h4>تایید نیرو</h4>
<br />
@*<div>
    <a class="btn btn-outline-info m-1" asp-page-handler="FilterAll">مشاهده همه</a>
    <a class="btn btn-outline-info m-1" asp-page-handler="FilterAccepted">فقط تایید شده</a>
    <a class="btn btn-outline-info m-1" asp-page-handler="FilterNotAccepted">فقط تایید نشده</a>
</div>
<br />*@
<div>
    <input onclick="changestatusfilter()" type="checkbox" id="primaryaccept" /> تایید اولیه
    <input onclick="changestatusfilter()" type="checkbox" id="finalaccept" /> تایید نهایی
    <input onclick="changestatusfilter()" type="checkbox" id="novalue" /> نامشخص
    <br />
    <input onclick="changestatusfilter()" type="checkbox" id="nprimaryaccept" /> رد اولیه
    <input onclick="changestatusfilter()" type="checkbox" id="nfinalaccept" /> رد نهایی
    <input onclick="changestatusfilter()" type="checkbox" id="nnovalue" /> مشخص
    <a id="statusfilter" class="btn btn-primary" href="?handler=Status">اعمال تغییرات</a>
    <script>
        function changestatusfilter() {
            var href = "?handler=Status";
            var prim = "&prim=";
            var final = "&final=";
            var noval = "&noval=";
            var nprim = "&nprim=";
            var nfinal = "&nfinal=";
            var nnoval = "&nnoval=";

            if ($("#primaryaccept").prop('checked')) {
                prim += "true";
            } else {
                prim += "false";
            }

            if ($("#finalaccept").prop('checked')) {
                final += "true";
            } else {
                final += "false";
            }

            if ($("#novalue").prop('checked')) {
                noval += "true";
            } else {
                noval += "false";
            }

            if ($("#nprimaryaccept").prop('checked')) {
                nprim += "true";
            } else {
                nprim += "false";
            }

            if ($("#nfinalaccept").prop('checked')) {
                nfinal += "true";
            } else {
                nfinal += "false";
            }

            if ($("#nnovalue").prop('checked')) {
                nnoval += "true";
            } else {
                nnoval += "false";
            }

            href += prim + final + noval + nprim + nfinal + nnoval;

            $("#statusfilter").attr("href", href);
        }
    </script>
</div>
<br />
<table class="table table-striped table-responsive">
    <thead>
        <tr>
            <th>
                نام و نام خانوادگی
            </th>
            <th>
                تاریخ ثبت نام
            </th>
            <th>
                وضعیت تایید/رد اولیه
            </th>
            <th>
                تایید/رد کننده اولیه
            </th>
            <th>
                تاریخ تایید/رد اولیه
            </th>
            <th>
                وضعیت تایید/رد نهایی
            </th>
            <th>
                تایید/رد کننده نهایی
            </th>
            <th>
                تاریخ تایید/رد نهایی
            </th>
            <th>
                نمره کسب شده / از
            </th>
            <th>
                تاریخ شروع مصاحبه
            </th>
            <th>
                تاریخ پایان مصاحبه
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.TblEmployeeRequestEmployee != null)
        {
            @if (@Model.TblEmployeeRequestEmployee.Count > 0)
            {
                @foreach (var item in Model.TblEmployeeRequestEmployee)
                {
                    <tr>
                        <td>
                            @Model.TblEmployeeRequestPrimaryInformation.Where(a => a.FldEmployeeRequestEmployeeId == item.FldEmployeeRequestEmployeeId).FirstOrDefault().FldEmployeeRequestPrimaryInformationFirstName &nbsp; @Model.TblEmployeeRequestPrimaryInformation.Where(a => a.FldEmployeeRequestEmployeeId == item.FldEmployeeRequestEmployeeId).FirstOrDefault().FldEmployeeRequestPrimaryInformationLastName
                        </td>
                        <td>
                            @item.TblEmployeeRequestPageTimeLogs.Where(a => a.FldEmployeeRequestPageTimeLogPageLevel == "Level1").FirstOrDefault().FldEmployeeRequestPageTimeLogStartTime.toPersianDate()
                            &nbsp;
                            @(((DateTime)item.TblEmployeeRequestPageTimeLogs.Where(a => a.FldEmployeeRequestPageTimeLogPageLevel == "Level1").FirstOrDefault().FldEmployeeRequestPageTimeLogStartTime).ToString("HH:mm"))
                        </td>
                        <td>
                            @if (item.FldEmployeeRequestPrimaryAcceptionId == 3)
                            {
                                <span class="badge badge-success">تایید شده</span>
                            }
                            else if (item.FldEmployeeRequestPrimaryAcceptionId == 2)
                            {
                                <span class="badge badge-danger">رد شده</span>
                            }
                            else
                            {
                                <span class="badge badge-warning text-white">مشخص نشده</span>
                            }
                        </td>
                        <td>
                            @if (item.FldEmployeeRequestUserPrimaryAccepterId != null)
                            {
                                @item.FldEmployeeRequestUserPrimaryAccepter.FldEmployeeRequestUserUsername
                            }
                        </td>
                        <td>
                            @if (item.FldEmployeeRequestEmployeePrimaryAcceptionDate != null)
                            {
                                @item.FldEmployeeRequestEmployeePrimaryAcceptionDate.toPersianDate()
                            }
                        </td>
                        <td>
                            @if (item.FldEmployeeRequestFinalAcceptionId == 1)
                            {
                                <span class="badge badge-success">تایید شده</span>
                            }
                            else if (item.FldEmployeeRequestFinalAcceptionId == 2)
                            {
                                <span class="badge badge-danger">رد شده</span>
                            }
                        </td>
                        <td>
                            @if (item.FldEmployeeRequestUserFinalAccepterId != null)
                            {
                                @item.FldEmployeeRequestUserFinalAccepter.FldEmployeeRequestUserUsername
                            }
                        </td>
                        <td>
                            @if (item.FldEmployeeRequestEmployeeFinalAcceptionDate != null)
                            {
                                @item.FldEmployeeRequestEmployeeFinalAcceptionDate.toPersianDate()
                            }
                        </td>
                        <td>
                            @if (item.FldEmployeeRequestEmployeeMaxPoint != null)
                            {

                                @Html.DisplayFor(modelItem => item.FldEmployeeRequestEmployeeResultPoint) <br />
                                <i>از</i> <br />
                                @Html.DisplayFor(modelItem => item.FldEmployeeRequestEmployeeMaxPoint)
                            }

                        </td>
                        <td>
                            @if (item.FldEmployeeRequestEmployeeInterviewStartDate != null)
                            {
                                @item.FldEmployeeRequestEmployeeInterviewStartDate.toPersianDate() <br /> @item.FldEmployeeRequestEmployeeInterviewStartDate.ToString().Split(' ')[1]
                            }
                        </td>
                        <td>
                            @if (item.FldEmployeeRequestEmployeeInterviewEndDate != null)
                            {
                                @item.FldEmployeeRequestEmployeeInterviewEndDate.toPersianDate() <br /> @item.FldEmployeeRequestEmployeeInterviewEndDate.ToString().Split(' ')[1]
                            }
                        </td>
                        <td>

                            @*تایید اولیه*@
                            @if (item.FldEmployeeRequestEmployeePrimaryAcceptionDate == null)
                            {
                                <a href="#" class="btn btn-success w-100" onclick="AskAccept('@item.FldEmployeeRequestEmployeeId');">تایید مرحله اولیه</a>
                                <a href="#" class="btn btn-danger w-100" onclick="AskDeny('@item.FldEmployeeRequestEmployeeId');">رد مرحله اولیه</a>
                            }
                            else if (item.FldEmployeeRequestPrimaryAcceptionId == 3)
                            {
                                //زمان مصاحبه
                                if (item.FldEmployeeRequestEmployeeInterviewStartDate == null)
                                {
                                    <a asp-page="SetInterview" asp-route-id="@item.FldEmployeeRequestEmployeeId" class="btn btn-success w-100">تعیین زمان مصاحبه</a>
                                    <a href="#" class="btn btn-info w-100" onclick="AskRevert('@item.FldEmployeeRequestEmployeeId');">برگشت از تایید</a>
                                }
                                else
                                {
                                    //تایید نهایی
                                    if (item.FldEmployeeRequestFinalAcceptionId == null)
                                    {
                                        <a href="#" class="btn btn-success w-100" onclick="AskFAccept('@item.FldEmployeeRequestEmployeeId');">تایید مرحله نهایی</a>
                                        <a href="#" class="btn btn-danger w-100" onclick="AskFDeny('@item.FldEmployeeRequestEmployeeId');">رد مرحله نهایی</a>
                                        <a href="#" class="btn btn-info w-100" onclick="AskIRevert('@item.FldEmployeeRequestEmployeeId');">حذف زمان مصاحبه</a>
                                    }
                                    else
                                    {
                                        if (item.FldEmployeeRequestFinalAcceptionId == 1)
                                        {
                                            <span class="badge badge-success">کاربر تایید نهایی شده</span>
                                            <a href="#" class="btn btn-primary w-100" onclick="AskFRevert('@item.FldEmployeeRequestEmployeeId');">برگشت از تایید</a>
                                        }
                                        else
                                        {
                                            <span class="badge badge-danger">کاربر مردود شده</span>
                                            <a href="#" class="btn btn-primary w-100" onclick="AskFRevert('@item.FldEmployeeRequestEmployeeId');">برگشت از عدم تایید</a>
                                        }
                                    }
                                }

                            }
                            else
                            {
                                <span class="badge badge-danger">کاربر مردود شده</span>
                                <a href="#" class="btn btn-info w-100" onclick="AskRevert('@item.FldEmployeeRequestEmployeeId');">برگشت از تایید</a>
                            }

                            @if (item.FldEmployeeRequestEmployeeMaxPoint != null)
                            {
                                <a asp-page="Scores" asp-route-id="@item.FldEmployeeRequestEmployeeId" onclick="window.open(this.href, 'mywin','left=20,top=20,width=800,height=500,toolbar=1,resizable=1'); return false;">مشاهده امتیاز ها</a>
                            }

                        </td>
                        <td>
                            <a asp-page="Detail" asp-route-id="@item.FldEmployeeRequestEmployeeId" onclick="window.open(this.href, 'mywin','left=20,top=20,width=800,height=600,toolbar=1,resizable=1'); return false;">مشاهده جزئیات متقضی</a>
                        </td>
                        <td>
                            @if (item.FldEmployeeRequestPrimaryAcceptionId == 3)
                            {
                                ViewBag.PDes = item.FldEmployeeRequestEmployeePrimaryAcceptDescription;
                            }
                            else if (item.FldEmployeeRequestPrimaryAcceptionId == 2)
                            {
                                ViewBag.PDes = item.FldEmployeeRequestEmployeePrimaryRejectDescription;
                            }
                            @if ((item.FldEmployeeRequestEmployeePrimaryAcceptDescription != null) || (item.FldEmployeeRequestEmployeePrimaryRejectDescription != null))
                            {
                                <a class="btn btn-outline-info" href="#" onclick="showDescriptions('@ViewBag.PDes')">توضیحات وضعیت اولیه</a>
                            }


                            @if (item.FldEmployeeRequestFinalAcceptionId == 1)
                            {
                                ViewBag.FDes = item.FldEmployeeRequestEmployeeFinalAcceptDescription;
                            }
                            else if (item.FldEmployeeRequestFinalAcceptionId == 2)
                            {
                                ViewBag.FDes = item.FldEmployeeRequestEmployeeFinalRejectDescription;
                            }
                            @if ((item.FldEmployeeRequestEmployeeFinalAcceptDescription != null) || (item.FldEmployeeRequestEmployeeFinalRejectDescription != null))
                            {
                                <a class="btn btn-outline-info" href="#" onclick="showDescriptions('@ViewBag.FDes')">توضیحات وضعیت نهایی</a>
                            }

                        </td>
                    </tr>
                }
            }



        }

    </tbody>
</table>

@section Botton {
    <a class="btn btn-danger rounded-circle" asp-page="../Panel/Index"><i class="fa fa-arrow-circle-left"></i></a>
}

<script src="~/lib/sweetalert/sweetalert2.10.js"></script>
@section Scripts {

    <script>
        function showDescriptions(desc) {
            Swal.fire(desc, '', '')
        }


        function AskAccept(id) {
            Swal.fire({
                title: 'کاربر تایید اولیه شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'توضیحات تایید اولیه',
                        input: 'textarea'
                    }).then(function (description) {
                        if (description.value) {
                            var xmlHttp = new XMLHttpRequest();
                            xmlHttp.open("GET", "?id=" + id + "&description=" + description.value + "&handler=Accept", false);
                            xmlHttp.send(null);
                            Swal.fire('درخواست تایید شد', '', 'success').then(() => {
                                location.reload();
                            })
                        }
                    })
                }
            });
        }

        function AskDeny(id) {
            Swal.fire({
                title: 'وضعیت اولیه کاربر رد شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'توضیحات عدم تایید اولیه',
                        input: 'textarea'
                    }).then(function (description) {
                        if (description.value) {
                            var xmlHttp = new XMLHttpRequest();
                            xmlHttp.open("GET", "?id=" + id + "&description=" + description.value + "&handler=Deny", false);
                            xmlHttp.send(null);
                            Swal.fire('درخواست رد شد', '', 'success').then(() => {
                                location.reload();
                            })
                        }
                    })
                }
            });
        }

        function AskFAccept(id) {
            Swal.fire({
                title: 'کاربر تایید نهایی شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'توضیحات تایید نهایی',
                        input: 'textarea'
                    }).then(function (description) {
                        if (description.value) {
                            var xmlHttp = new XMLHttpRequest();
                            xmlHttp.open("GET", "?id=" + id + "&description=" + description.value + "&handler=FAccept", false);
                            xmlHttp.send(null);
                            Swal.fire('درخواست تایید شد', '', 'success').then(() => {
                                location.reload();
                            })
                        }
                    })
                }
            });
        }

        function AskFDeny(id) {
            Swal.fire({
                title: 'وضعیت نهایی کاربر رد شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'توضیحات عدم تایید نهایی',
                        input: 'textarea'
                    }).then(function (description) {
                        if (description.value) {
                            var xmlHttp = new XMLHttpRequest();
                            xmlHttp.open("GET", "?id=" + id + "&description=" + description.value + "&handler=FDeny", false);
                            xmlHttp.send(null);
                            Swal.fire('درخواست رد شد', '', 'success').then(() => {
                                location.reload();
                            })
                        }
                    })
                }
            });
        }

        function AskFRevert(id) {
            Swal.fire({
                title: 'وضعیت نهایی کاربر به حالت قبل بازگردد؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    var xmlHttp = new XMLHttpRequest();
                    xmlHttp.open("GET", "?id=" + id + "&handler=FRevert", false);
                    xmlHttp.send(null);
                    Swal.fire('درخواست برگشت داده شد', '', 'success').then(() => {
                        location.reload();
                    })
                }
            });
        }

        function AskRevert(id) {
            Swal.fire({
                title: 'وضعیت اولیه کاربر به حالت قبل بازگردد؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    var xmlHttp = new XMLHttpRequest();
                    xmlHttp.open("GET", "?id=" + id + "&handler=Revert", false);
                    xmlHttp.send(null);
                    Swal.fire('درخواست برگشت داده شد', '', 'success').then(() => {
                        location.reload();
                    })
                }
            });
        }

        function AskIRevert(id) {
            Swal.fire({
                title: 'زمان مصاحبه کاربر حذف شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    var xmlHttp = new XMLHttpRequest();
                    xmlHttp.open("GET", "?id=" + id + "&handler=IRevert", false);
                    xmlHttp.send(null);
                    Swal.fire('درخواست برگشت داده شد', '', 'success').then(() => {
                        location.reload();
                    })
                }
            });
        }

    </script>
}