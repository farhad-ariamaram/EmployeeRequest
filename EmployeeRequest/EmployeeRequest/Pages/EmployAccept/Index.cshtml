@page
@model EmployAccept.IndexModel
@using Utilities;

@{
    ViewData["Title"] = "تایید نیرو";
}

<h4>تایید نیرو</h4>

<table class="table">
    <thead>
        <tr>
            <th>
                نام و نام خانوادگی
            </th>
            <th>
                شماره ملی
            </th>
            <th>
                شماره تماس
            </th>
            <th>
                وضعیت تایید/رد اولیه
            </th>
            <th>
                تایید/رد کننده اولیه
            </th>
            <th>
                تاریخ تایید/رد اولیه
            </th>
            <th>
                وضعیت تایید/رد نهایی
            </th>
            <th>
                تایید/رد کننده نهایی
            </th>
            <th>
                تاریخ تایید/رد نهایی
            </th>
            <th>
                نمره کسب شده / از
            </th>
            <th>
                تاریخ شروع مصاحبه
            </th>
            <th>
                تاریخ پایان مصاحبه
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.TblEmployeeRequestEmployee)
        {
            <tr>
                <td>
                    @Model.TblEmployeeRequestPrimaryInformation.Where(a => a.FldEmployeeRequestEmployeeId == item.FldEmployeeRequestEmployeeId).FirstOrDefault().FldEmployeeRequestPrimaryInformationFirstName
                </td>
                <td>
                    @Model.TblEmployeeRequestPrimaryInformation.Where(a => a.FldEmployeeRequestEmployeeId == item.FldEmployeeRequestEmployeeId).FirstOrDefault().FldEmployeeRequestPrimaryInformationNationalCode
                </td>
                <td>
                    @Model.TblEmployeeRequestPrimaryInformation.Where(a => a.FldEmployeeRequestEmployeeId == item.FldEmployeeRequestEmployeeId).FirstOrDefault().FldEmployeeRequestPrimaryInformationPhoneNo
                </td>
                <td>
                    @if (item.FldEmployeeRequestPrimaryAcceptionId == 3)
                    {
                        <span class="badge badge-success">تایید شده</span>
                    }
                    else if (item.FldEmployeeRequestPrimaryAcceptionId == 2)
                    {
                        <span class="badge badge-danger">رد شده</span>
                    }
                    else
                    {
                        <span class="badge badge-warning text-white">مشخص نشده</span>
                    }
                </td>
                <td>
                    @if (item.FldEmployeeRequestUserPrimaryAccepterId != null)
                    {
                        @item.FldEmployeeRequestUserPrimaryAccepter.FldEmployeeRequestUserUsername
                    }
                </td>
                <td>
                    @if (item.FldEmployeeRequestEmployeePrimaryAcceptionDate != null)
                    {
                        @item.FldEmployeeRequestEmployeePrimaryAcceptionDate.toPersianDate()
                    }
                </td>
                <td>
                    @if (item.FldEmployeeRequestFinalAcceptionId == 1)
                    {
                        <span class="badge badge-success">تایید شده</span>
                    }
                    else if(item.FldEmployeeRequestFinalAcceptionId == 2)
                    {
                        <span class="badge badge-danger">رد شده</span>
                    }
                </td>
                <td>
                    @if (item.FldEmployeeRequestUserFinalAccepterId != null)
                    {
                        @item.FldEmployeeRequestUserFinalAccepter.FldEmployeeRequestUserUsername
                    }
                </td>
                <td>
                    @if (item.FldEmployeeRequestEmployeeFinalAcceptionDate != null)
                    {
                        @item.FldEmployeeRequestEmployeeFinalAcceptionDate.toPersianDate()
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FldEmployeeRequestEmployeeResultPoint) <br />
                    از <br />
                    @Html.DisplayFor(modelItem => item.FldEmployeeRequestEmployeeMaxPoint)
                </td>
                <td>
                    @if (item.FldEmployeeRequestEmployeeInterviewStartDate != null)
                    {
                        @item.FldEmployeeRequestEmployeeInterviewStartDate.toPersianDate() <br /> @item.FldEmployeeRequestEmployeeInterviewStartDate.ToString().Split(' ')[1]
                    }
                </td>
                <td>
                    @if (item.FldEmployeeRequestEmployeeInterviewEndDate != null)
                    {
                        @item.FldEmployeeRequestEmployeeInterviewEndDate.toPersianDate() <br /> @item.FldEmployeeRequestEmployeeInterviewEndDate.ToString().Split(' ')[1]
                    }
                </td>
                <td>

                    @*تایید اولیه*@
                    @if (item.FldEmployeeRequestEmployeePrimaryAcceptionDate == null)
                    {
                        <a href="#" class="btn btn-success w-100" onclick="AskAccept('@item.FldEmployeeRequestEmployeeId');">تایید مرحله اولیه</a>
                        <a href="#" class="btn btn-danger w-100" onclick="AskDeny('@item.FldEmployeeRequestEmployeeId');">رد مرحله اولیه</a>
                    }
                    else if (item.FldEmployeeRequestPrimaryAcceptionId == 3)
                    {
                        //زمان مصاحبه
                        if (item.FldEmployeeRequestEmployeeInterviewStartDate == null)
                        {
                            <a asp-page="SetInterview" asp-route-id="@item.FldEmployeeRequestEmployeeId" class="btn btn-primary w-100">تعیین زمان مصاحبه</a>
                        }
                        else
                        {
                            //تایید نهایی
                            if (item.FldEmployeeRequestFinalAcceptionId == null)
                            {
                                <a href="#" class="btn btn-success w-100" onclick="AskFAccept('@item.FldEmployeeRequestEmployeeId');">تایید مرحله نهایی</a>
                                <a href="#" class="btn btn-danger w-100" onclick="AskFDeny('@item.FldEmployeeRequestEmployeeId');">رد مرحله نهایی</a>
                            }
                            else
                            {
                                if (item.FldEmployeeRequestFinalAcceptionId == 1)
                                {
                                    <span class="badge badge-success">کاربر تایید نهایی شده</span>
                                }
                                else
                                {
                                    <span class="badge badge-danger">کاربر مردود شده</span>
                                }
                            }
                        }

                    }
                    else
                    {
                        <span class="badge badge-danger">کاربر مردود شده</span>
                    }

                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <a asp-page="../Panel/Index">بازگشت به پنل کاربری</a>
</div>

<script src="~/lib/sweetalert/sweetalert2.10.js"></script>
@section Scripts {

    <script>

        function AskAccept(id) {
            Swal.fire({
                title: 'کاربر تایید اولیه شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    var xmlHttp = new XMLHttpRequest();
                    xmlHttp.open("GET", "?id=" + id + "&handler=Accept", false);
                    xmlHttp.send(null);
                    Swal.fire('درخواست تایید شد', '', 'success').then(() => {
                        location.reload();
                    })
                }
            });
        }

        function AskDeny(id) {
            Swal.fire({
                title: 'وضعیت اولیه کاربر رد شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    var xmlHttp = new XMLHttpRequest();
                    xmlHttp.open("GET", "?id=" + id + "&handler=Deny", false);
                    xmlHttp.send(null);
                    Swal.fire('درخواست رد شد', '', 'success').then(() => {
                        location.reload();
                    })
                }
            });
        }

        function AskFAccept(id) {
            Swal.fire({
                title: 'کاربر تایید نهایی شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    var xmlHttp = new XMLHttpRequest();
                    xmlHttp.open("GET", "?id=" + id + "&handler=FAccept", false);
                    xmlHttp.send(null);
                    Swal.fire('درخواست تایید شد', '', 'success').then(() => {
                        location.reload();
                    })
                }
            });
        }

        function AskFDeny(id) {
            Swal.fire({
                title: 'وضعیت نهایی کاربر رد شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    var xmlHttp = new XMLHttpRequest();
                    xmlHttp.open("GET", "?id=" + id + "&handler=FDeny", false);
                    xmlHttp.send(null);
                    Swal.fire('درخواست رد شد', '', 'success').then(() => {
                        location.reload();
                    })
                }
            });
        }
    </script>
}