@page
@model EmployAccept.IndexModel
@using Utilities;

@{
    ViewData["Title"] = "تایید نیرو";
}

<h4>تایید نیرو</h4>
<br />

<form class="w-100" asp-page="./Index" method="get">
    <div class="card-group">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">جستجو</h5>
                <p class="card-text">
                    <label for="search">جستجو:</label>
                    <input class="form-control" type="text" name="search" placeholder="جستجو..." value="@(Model.currentFilter)" />
                </p>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">وضعیت اولیه</h5>
                <p class="card-text">
                    <input type="radio" id="prim1" name="prim" value="0" @(Model.currentprim=="0"?"checked":"")>
                    <label for="prim1">نامشخص</label><br>
                    <input type="radio" id="prim2" name="prim" value="1" @(Model.currentprim=="1"?"checked":"")>
                    <label for="prim2">تایید شده</label><br>
                    <input type="radio" id="prim3" name="prim" value="2" @(Model.currentprim=="2"?"checked":"")>
                    <label for="prim3">رد شده</label><br>
                    <input type="radio" id="prim4" name="prim" value="3" @((Model.currentprim!="0")&&(Model.currentprim!="1")&&(Model.currentprim!="2")?"checked":"")>
                    <label for="prim4">همه</label><br><br>
                </p>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">وضعیت نهایی</h5>
                <p class="card-text">
                    <input type="radio" id="final1" name="final" value="0" @(Model.currentfinal=="0"?"checked":"")>
                    <label for="final1">نامشخص</label><br>
                    <input type="radio" id="final2" name="final" value="1" @(Model.currentfinal=="1"?"checked":"")>
                    <label for="final2">تایید شده</label><br>
                    <input type="radio" id="final3" name="final" value="2" @(Model.currentfinal=="2"?"checked":"")>
                    <label for="final3">رد شده</label><br>
                    <input type="radio" id="final4" name="final" value="3" @((Model.currentfinal!="0")&&(Model.currentfinal!="1")&&(Model.currentfinal!="2")?"checked":"")>
                    <label for="final4">همه</label><br><br>
                </p>
            </div>
        </div>
    </div>
    <input class="btn btn-primary m-1" type="submit" value="اعمال فیلتر ها" />
    <a class="btn btn-link" asp-page="./Index">حذف فیلتر ها</a>
</form>



<br />
<table class="table table-striped table-responsive">
    <thead>
        <tr>
            <th>
                نام و نام خانوادگی
            </th>
            <th>
                تاریخ ثبت نام
            </th>
            <th>
                وضعیت تایید/رد اولیه
            </th>
            <th>
                تایید/رد کننده اولیه
            </th>
            <th>
                تاریخ تایید/رد اولیه
            </th>
            <th>
                وضعیت تایید/رد نهایی
            </th>
            <th>
                تایید/رد کننده نهایی
            </th>
            <th>
                تاریخ تایید/رد نهایی
            </th>
            <th>
                نمره کسب شده / از
            </th>
            <th>
                تاریخ شروع مصاحبه
            </th>
            <th>
                تاریخ پایان مصاحبه
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @try
        {
            @foreach (var item in Model.TblEmployeeRequestEmployee)
            {
                <tr>
                    <td>
                        @item.TblEmployeeRequestPrimaryInformations.FirstOrDefault(a => a.FldEmployeeRequestEmployeeId == item.FldEmployeeRequestEmployeeId).FldEmployeeRequestPrimaryInformationFirstName
                        <br />
                        @item.TblEmployeeRequestPrimaryInformations.FirstOrDefault(a => a.FldEmployeeRequestEmployeeId == item.FldEmployeeRequestEmployeeId).FldEmployeeRequestPrimaryInformationLastName
                    </td>
                    <td>
                        @item.TblEmployeeRequestPageTimeLogs.Where(a => a.FldEmployeeRequestPageTimeLogPageLevel == "Level1").FirstOrDefault().FldEmployeeRequestPageTimeLogStartTime.toPersianDate()
                        &nbsp;
                        @(((DateTime)item.TblEmployeeRequestPageTimeLogs.Where(a => a.FldEmployeeRequestPageTimeLogPageLevel == "Level1").FirstOrDefault().FldEmployeeRequestPageTimeLogStartTime).ToString("HH:mm"))
                    </td>
                    <td>
                        @if (item.FldEmployeeRequestPrimaryAcceptionId == 3)
                        {
                            <span class="badge badge-success">تایید شده</span>
                        }
                        else if (item.FldEmployeeRequestPrimaryAcceptionId == 2)
                        {
                            <span class="badge badge-danger">رد شده</span>
                        }
                        else
                        {
                            <span class="badge badge-warning text-white">مشخص نشده</span>
                        }
                    </td>
                    <td>
                        @if (item.FldEmployeeRequestUserPrimaryAccepterId != null)
                        {
                            @item.FldEmployeeRequestUserPrimaryAccepter.FldEmployeeRequestUserUsername
                        }
                    </td>
                    <td>
                        @if (item.FldEmployeeRequestEmployeePrimaryAcceptionDate != null)
                        {
                            @item.FldEmployeeRequestEmployeePrimaryAcceptionDate.toPersianDate()
                        }
                    </td>
                    <td>
                        @if (item.FldEmployeeRequestFinalAcceptionId == 1)
                        {
                            <span class="badge badge-success">تایید شده</span>
                        }
                        else if (item.FldEmployeeRequestFinalAcceptionId == 2)
                        {
                            <span class="badge badge-danger">رد شده</span>
                        }
                    </td>
                    <td>
                        @if (item.FldEmployeeRequestUserFinalAccepterId != null)
                        {
                            @item.FldEmployeeRequestUserFinalAccepter.FldEmployeeRequestUserUsername
                        }
                    </td>
                    <td>
                        @if (item.FldEmployeeRequestEmployeeFinalAcceptionDate != null)
                        {
                            @item.FldEmployeeRequestEmployeeFinalAcceptionDate.toPersianDate()
                        }
                    </td>
                    <td>
                        @if (item.FldEmployeeRequestEmployeeMaxPoint != null)
                        {

                            @Html.DisplayFor(modelItem => item.FldEmployeeRequestEmployeeResultPoint) <br />
                            <i>از</i> <br />
                            @Html.DisplayFor(modelItem => item.FldEmployeeRequestEmployeeMaxPoint)
                        }

                    </td>
                    <td>
                        @if (item.FldEmployeeRequestEmployeeInterviewStartDate != null)
                        {
                            @item.FldEmployeeRequestEmployeeInterviewStartDate.toPersianDate() <br /> @item.FldEmployeeRequestEmployeeInterviewStartDate.ToString().Split(' ')[1]
                        }
                    </td>
                    <td>
                        @if (item.FldEmployeeRequestEmployeeInterviewEndDate != null)
                        {
                            @item.FldEmployeeRequestEmployeeInterviewEndDate.toPersianDate() <br /> @item.FldEmployeeRequestEmployeeInterviewEndDate.ToString().Split(' ')[1]
                        }
                    </td>
                    <td>

                        @*تایید اولیه*@
                        @if (item.FldEmployeeRequestEmployeePrimaryAcceptionDate == null)
                        {
                            <a href="#" class="btn btn-success w-100" onclick="AskAccept('@item.FldEmployeeRequestEmployeeId');">تایید مرحله اولیه</a>
                            <a href="#" class="btn btn-danger w-100" onclick="AskDeny('@item.FldEmployeeRequestEmployeeId');">رد مرحله اولیه</a>
                        }
                        else if (item.FldEmployeeRequestPrimaryAcceptionId == 3)
                        {
                            //زمان مصاحبه
                            if (item.FldEmployeeRequestEmployeeInterviewStartDate == null)
                            {
                                <a asp-page="SetInterview" asp-route-id="@item.FldEmployeeRequestEmployeeId" class="btn btn-success w-100">تعیین زمان مصاحبه</a>
                                <a href="#" class="btn btn-info w-100" onclick="AskRevert('@item.FldEmployeeRequestEmployeeId');">برگشت از تایید</a>
                            }
                            else
                            {
                                //تایید نهایی
                                if (item.FldEmployeeRequestFinalAcceptionId == null)
                                {
                                    <a href="#" class="btn btn-success w-100" onclick="AskFAccept('@item.FldEmployeeRequestEmployeeId');">تایید مرحله نهایی</a>
                                    <a href="#" class="btn btn-danger w-100" onclick="AskFDeny('@item.FldEmployeeRequestEmployeeId');">رد مرحله نهایی</a>
                                    <a href="#" class="btn btn-info w-100" onclick="AskIRevert('@item.FldEmployeeRequestEmployeeId');">حذف زمان مصاحبه</a>
                                }
                                else
                                {
                                    if (item.FldEmployeeRequestFinalAcceptionId == 1)
                                    {
                                        <span class="badge badge-success">کاربر تایید نهایی شده</span>
                                        <a href="#" class="btn btn-primary w-100" onclick="AskFRevert('@item.FldEmployeeRequestEmployeeId');">برگشت از تایید</a>
                                    }
                                    else
                                    {
                                        <span class="badge badge-danger">کاربر مردود شده</span>
                                        <a href="#" class="btn btn-primary w-100" onclick="AskFRevert('@item.FldEmployeeRequestEmployeeId');">برگشت از عدم تایید</a>
                                    }
                                }
                            }

                        }
                        else
                        {
                            <span class="badge badge-danger">کاربر مردود شده</span>
                            <a href="#" class="btn btn-info w-100" onclick="AskRevert('@item.FldEmployeeRequestEmployeeId');">برگشت از تایید</a>
                        }

                        @if (item.FldEmployeeRequestEmployeeMaxPoint != null)
                        {
                            <a asp-page="Scores" asp-route-id="@item.FldEmployeeRequestEmployeeId" onclick="window.open(this.href, 'mywin','left=20,top=20,width=800,height=500,toolbar=1,resizable=1'); return false;">مشاهده امتیاز ها</a>
                        }

                        <br />
                        @if (item.FldEmployeeRequestPrimaryAcceptionId == 3)
                        {
                            ViewBag.PDes = item.FldEmployeeRequestEmployeePrimaryAcceptDescription;
                        }
                        else if (item.FldEmployeeRequestPrimaryAcceptionId == 2)
                        {
                            ViewBag.PDes = item.FldEmployeeRequestEmployeePrimaryRejectDescription;
                        }
                        @if ((item.FldEmployeeRequestEmployeePrimaryAcceptDescription != null) || (item.FldEmployeeRequestEmployeePrimaryRejectDescription != null))
                        {
                            <a class="btn btn-outline-info" href="#" onclick="showDescriptions('@ViewBag.PDes')">توضیحات وضعیت اولیه</a>
                        }


                        @if (item.FldEmployeeRequestFinalAcceptionId == 1)
                        {
                            ViewBag.FDes = item.FldEmployeeRequestEmployeeFinalAcceptDescription;
                        }
                        else if (item.FldEmployeeRequestFinalAcceptionId == 2)
                        {
                            ViewBag.FDes = item.FldEmployeeRequestEmployeeFinalRejectDescription;
                        }
                        @if ((item.FldEmployeeRequestEmployeeFinalAcceptDescription != null) || (item.FldEmployeeRequestEmployeeFinalRejectDescription != null))
                        {
                            <a class="btn btn-outline-info" href="#" onclick="showDescriptions('@ViewBag.FDes')">توضیحات وضعیت نهایی</a>
                        }
                        <br />
                        <a asp-page="Detail" asp-route-id="@item.FldEmployeeRequestEmployeeId" onclick="window.open(this.href, 'mywin','left=20,top=20,width=800,height=600,toolbar=1,resizable=1'); return false;">مشاهده جزئیات متقضی</a>

                    </td>

                </tr>
            }
        }
        catch (Exception)
        {

        }


    </tbody>
</table>

@section Botton {
    <a class="btn btn-danger rounded-circle" asp-page="../Panel/Index"><i class="fa fa-arrow-circle-left"></i></a>
}

<script src="~/lib/sweetalert/sweetalert2.10.js"></script>
@section Scripts {

    <script>
        function showDescriptions(desc) {
            Swal.fire(desc, '', '')
        }


        function AskAccept(id) {
            Swal.fire({
                title: 'کاربر تایید اولیه شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'توضیحات تایید اولیه',
                        input: 'textarea'
                    }).then(function (description) {
                        if (description.value) {
                            var xmlHttp = new XMLHttpRequest();
                            xmlHttp.open("GET", "?id=" + id + "&description=" + description.value + "&handler=Accept", false);
                            xmlHttp.send(null);
                            Swal.fire('درخواست تایید شد', '', 'success').then(() => {
                                location.reload();
                            })
                        }
                    })
                }
            });
        }

        function AskDeny(id) {
            Swal.fire({
                title: 'وضعیت اولیه کاربر رد شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'توضیحات عدم تایید اولیه',
                        input: 'textarea'
                    }).then(function (description) {
                        if (description.value) {
                            var xmlHttp = new XMLHttpRequest();
                            xmlHttp.open("GET", "?id=" + id + "&description=" + description.value + "&handler=Deny", false);
                            xmlHttp.send(null);
                            Swal.fire('درخواست رد شد', '', 'success').then(() => {
                                location.reload();
                            })
                        }
                    })
                }
            });
        }

        function AskFAccept(id) {
            Swal.fire({
                title: 'کاربر تایید نهایی شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'توضیحات تایید نهایی',
                        input: 'textarea'
                    }).then(function (description) {
                        if (description.value) {
                            var xmlHttp = new XMLHttpRequest();
                            xmlHttp.open("GET", "?id=" + id + "&description=" + description.value + "&handler=FAccept", false);
                            xmlHttp.send(null);
                            Swal.fire('درخواست تایید شد', '', 'success').then(() => {
                                location.reload();
                            })
                        }
                    })
                }
            });
        }

        function AskFDeny(id) {
            Swal.fire({
                title: 'وضعیت نهایی کاربر رد شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'توضیحات عدم تایید نهایی',
                        input: 'textarea'
                    }).then(function (description) {
                        if (description.value) {
                            var xmlHttp = new XMLHttpRequest();
                            xmlHttp.open("GET", "?id=" + id + "&description=" + description.value + "&handler=FDeny", false);
                            xmlHttp.send(null);
                            Swal.fire('درخواست رد شد', '', 'success').then(() => {
                                location.reload();
                            })
                        }
                    })
                }
            });
        }

        function AskFRevert(id) {
            Swal.fire({
                title: 'وضعیت نهایی کاربر به حالت قبل بازگردد؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    var xmlHttp = new XMLHttpRequest();
                    xmlHttp.open("GET", "?id=" + id + "&handler=FRevert", false);
                    xmlHttp.send(null);
                    Swal.fire('درخواست برگشت داده شد', '', 'success').then(() => {
                        location.reload();
                    })
                }
            });
        }

        function AskRevert(id) {
            Swal.fire({
                title: 'وضعیت اولیه کاربر به حالت قبل بازگردد؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    var xmlHttp = new XMLHttpRequest();
                    xmlHttp.open("GET", "?id=" + id + "&handler=Revert", false);
                    xmlHttp.send(null);
                    Swal.fire('درخواست برگشت داده شد', '', 'success').then(() => {
                        location.reload();
                    })
                }
            });
        }

        function AskIRevert(id) {
            Swal.fire({
                title: 'زمان مصاحبه کاربر حذف شود؟',
                showDenyButton: true,
                confirmButtonText: `بله`,
                denyButtonText: `خیر`,
            }).then((result) => {
                if (result.isConfirmed) {
                    var xmlHttp = new XMLHttpRequest();
                    xmlHttp.open("GET", "?id=" + id + "&handler=IRevert", false);
                    xmlHttp.send(null);
                    Swal.fire('درخواست برگشت داده شد', '', 'success').then(() => {
                        location.reload();
                    })
                }
            });
        }

    </script>
}